package channelserver

import (
	"encoding/hex"
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"

	"github.com/Solenataris/Erupe/common/bfutil"
	"github.com/Solenataris/Erupe/network/mhfpacket"
	"github.com/Solenataris/Erupe/server/channelserver/compression/deltacomp"
	"github.com/Solenataris/Erupe/server/channelserver/compression/nullcomp"
	"go.uber.org/zap"
)

func handleMsgMhfSavedata(s *Session, p mhfpacket.MHFPacket) {
	pkt := p.(*mhfpacket.MsgMhfSavedata)
	characterSaveData, err := GetCharacterSaveData(s, s.charID)
	if err != nil {
		s.logger.Error("failed to retrieve character save data from db", zap.Error(err), zap.Uint32("charID", s.charID))
		return
	}
	// Var to hold the decompressed savedata for updating the launcher response fields.
	var decompressedData []byte
	if pkt.SaveType == 1 {
		// Diff-based update.
		// diffs themselves are also potentially compressed
		diff, err := nullcomp.Decompress(pkt.RawDataPayload)
		if err != nil {
			s.logger.Fatal("Failed to decompress diff", zap.Error(err))
		}
		// Perform diff.
		characterSaveData.SetBaseSaveData(deltacomp.ApplyDataDiff(diff, characterSaveData.BaseSaveData()))
		s.logger.Info("Diffing...")
	} else {
		// Regular blob update.
		saveData, err := nullcomp.Decompress(pkt.RawDataPayload)

		characterSaveData.SetBaseSaveData(saveData)
		if err != nil {
			s.logger.Fatal("Failed to decompress savedata from packet", zap.Error(err))
		}
		s.logger.Info("Updating save with blob")
	}
	characterSaveData.IsNewCharacter = false
	characterBaseSaveData := characterSaveData.BaseSaveData()
	// Make a copy for updating the launcher fields.
	decompressedData = make([]byte, len(characterBaseSaveData))
	copy(decompressedData, characterBaseSaveData)
	err = characterSaveData.Save(s, nil)
	if err != nil {
		s.logger.Fatal("Failed to update savedata in db", zap.Error(err))
	}
	s.logger.Info("Wrote recompressed savedata back to DB.")
	dumpSaveData(s, pkt.RawDataPayload, "")
	// Temporary server launcher response stuff
	// 0x1F715	Weapon Class
	// 0x1FDF6 HR (small_gr_level)
	// 0x88 Character Name
	_, err = s.server.db.Exec("UPDATE characters SET weapon=$1 WHERE id=$2", uint16(decompressedData[128789]), s.charID)
	if err != nil {
		s.logger.Fatal("Failed to character weapon in db", zap.Error(err))
	}
	gr := uint16(decompressedData[130550])<<8 | uint16(decompressedData[130551])
	s.logger.Info("Setting db field", zap.Uint16("gr_override_level", gr))
	// We have to use `gr_override_level` (uint16), not `small_gr_level` (uint8) to store this.
	_, err = s.server.db.Exec("UPDATE characters SET gr_override_mode=true, gr_override_level=$1 WHERE id=$2", gr, s.charID)
	if err != nil {
		s.logger.Fatal("Failed to update character gr_override_level in db", zap.Error(err))
	}
	characterName := s.clientContext.StrConv.MustDecode(bfutil.UpToNull(decompressedData[88:100]))
	_, err = s.server.db.Exec("UPDATE characters SET name=$1 WHERE id=$2", characterName, s.charID)
	if err != nil {
		s.logger.Fatal("Failed to update character name in db", zap.Error(err))
	}
	doAckSimpleSucceed(s, pkt.AckHandle, []byte{0x00, 0x00, 0x00, 0x00})
}

func dumpSaveData(s *Session, data []byte, suffix string) {
	if !s.server.erupeConfig.DevModeOptions.SaveDumps.Enabled {
		return
	} else {
		dir := filepath.Join(s.server.erupeConfig.DevModeOptions.SaveDumps.OutputDir, fmt.Sprintf("%s_",s.Name))
		path := filepath.Join(s.server.erupeConfig.DevModeOptions.SaveDumps.OutputDir, fmt.Sprintf("%s_",s.Name), fmt.Sprintf("%d_%s_%s%s.bin", s.charID, s.Name, Time_Current().Format("2006-01-02_15.04.05"), suffix))

		if _, err := os.Stat(dir); os.IsNotExist(err) {
			os.Mkdir(dir, os.ModeDir)
		}
		err := ioutil.WriteFile(path, data, 0644)
		if err != nil {
			s.logger.Fatal("Error dumping savedata", zap.Error(err))
		}
	}
}

func handleMsgMhfLoaddata(s *Session, p mhfpacket.MHFPacket) {
	pkt := p.(*mhfpacket.MsgMhfLoaddata)
	overrideFile := filepath.Join(".", "bin", "save_override.bin")
	var data []byte

	if _, err := os.Stat(overrideFile); err == nil {
		file, err := os.Open(overrideFile)
		if err != nil {
			panic(err)
		}
		data, err := ioutil.ReadAll(file)
		if err != nil {
			panic(err)
		}
		doAckBufSucceed(s, pkt.AckHandle, data)
	}

	err := s.server.db.QueryRow("SELECT savedata FROM characters WHERE id = $1", s.charID).Scan(&data)
	if err != nil {
		s.logger.Fatal("Failed to get savedata from db", zap.Error(err))
	}
	doAckBufSucceed(s, pkt.AckHandle, data)
}

func handleMsgMhfSaveScenarioData(s *Session, p mhfpacket.MHFPacket) {
	pkt := p.(*mhfpacket.MsgMhfSaveScenarioData)

	// Do this ack manually because it uses a non-(0|1) error code
	s.QueueSendMHF(&mhfpacket.MsgSysAck{
		AckHandle:        pkt.AckHandle,
		IsBufferResponse: false,
		ErrorCode:        0x40,
		AckData:          []byte{0x00, 0x00, 0x00, 0x40},
	})
}

func handleMsgMhfLoadScenarioData(s *Session, p mhfpacket.MHFPacket) {
	pkt := p.(*mhfpacket.MsgMhfLoadScenarioData)
	doAckBufSucceed(s, pkt.AckHandle, []byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00})
}

func handleMsgMhfGetPaperData(s *Session, p mhfpacket.MHFPacket) {
	// if the game gets bad responses for this it breaks the ability to save
	pkt := p.(*mhfpacket.MsgMhfGetPaperData)
	var data []byte
	var err error
	if pkt.Unk2 == 4 {
		data, err = hex.DecodeString("0A218EAD000000000000000000000000")
	} else if pkt.Unk2 == 5 {
		data, err = hex.DecodeString("0A218EAD00000000000000000000003403E900010000000000000000000003E900020000000000000000000003EB00010064006400C80064000003EB00020096006400F00064000003EC000A270F002800000000000003ED000A01F4000000000000000003EF00010000000000000000000003F000C801900BB801900BB8000003F200010FA0000000000000000003F200020FA0000000000000000003F3000117703A984E2061A8753003F3000217703A984E2061A8753003F400011F40445C57E46B6C791803F400021F40445C57E46B6C791803F700010010001000100000000003F7000200100010001000000000044D000107E001F4000000000000044D000207E001F4000000000000044F0001000000000BB800000BB8044F0002000000000BB800000BB804500001000A270F00280000000004500002000A270F00280000000004510001000A01F400000000000004510002000A01F400000000000007D100010011003A0000000602BC07D100010014003A0000000300C807D100010016003A0000000700FA07D10001001B003A00000001006407D100010035003A0000000803E807D100010043003A0000000901F407D100010044003A00000002009607D10001004A003A0000000400C807D10001004B003A0000000501F407D10001004C003A0000000A032007D100010050003A0000000B038407D100010059003A0000000C025807D100020011003C0000000602BC07D100020014003C0000000300C807D100020016003C00000007015E07D10002001B003C00000001006407D100020027003C0000000D00C807D100020028003C0000000F025807D100020035003C0000000803E807D100020043003C0000000201F407D100020044003C00000009009607D10002004A003C0000000400C807D10002004B003C0000000501F407D10002004C003C0000000A032007D100020050003C0000000B038407D100020051003C0000000E038407D100020059003C0000000C025807D10002005E003C0000001003E8")
	} else if pkt.Unk2 == 6 {
		data, err = hex.DecodeString
	} else if pkt.Unk2 == 6001 {
		data, err = hex.DecodeString("0A218EAD0000000000000000000000052B97010113882B9801010D162B99010105DC2B9A010100642B9B01010032")
	} else if pkt.Unk2 == 6002 {
		data, err = hex.DecodeString
	} else if pkt.Unk2 == 6010 {
		data, err = hex.DecodeString("0A218EAD00000000000000000000000B2B9701010E742B9801010B542B99010105142CBD010100FA2CBE010100FA2F17010100FA2F21010100FA2F1A010100FA2F24010100FA2DFE010100C82DFD01010190")
	} else if pkt.Unk2 == 6011 {
		data, err = hex.DecodeString("0A218EAD00000000000000000000000B2B9701010E742B9801010B542B99010105142CBD010100FA2CBE010100FA2F17010100FA2F21010100FA2F1A010100FA2F24010100FA2DFE010100C82DFD01010190")
	} else if pkt.Unk2 == 6012 {
		data, err = hex.DecodeString("0A218EAD00000000000000000000000D2B9702010DAC2B9802010B542B990201051430DC010101902CBD010100C82CBE010100C82F17010100C82F21010100C82F1A010100C82F24010100C82DFF010101902E00010100C82E0101010064")
	} else if pkt.Unk2 == 7001 {
		data, err = hex.DecodeString
	} else if pkt.Unk2 == 7002 {
		data, err = hex.DecodeString
	} else if pkt.Unk2 == 7011 {
		data, err = hex.DecodeString
	} else if pkt.Unk2 == 7012 {
		data, err = hex.DecodeString
	} else {
		data = []byte{0x00, 0x00, 0x00, 0x00}
		s.logger.Info("GET_PAPER request for unknown type")
	}
	if err != nil {
		panic(err)
	}
	doAckBufSucceed(s, pkt.AckHandle, data)
}

func handleMsgSysAuthData(s *Session, p mhfpacket.MHFPacket) {}
