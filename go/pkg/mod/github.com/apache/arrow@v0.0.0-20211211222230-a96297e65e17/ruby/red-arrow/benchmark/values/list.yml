# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

contexts:
  - name: master
    prelude: |
      $LOAD_PATH.unshift(File.expand_path("ext/arrow"))
      $LOAD_PATH.unshift(File.expand_path("lib"))
prelude: |-
  require "arrow"
  require "faker"

  state = ENV.fetch("FAKER_RANDOM_SEED", 17).to_i
  Faker::Config.random = Random.new(state)

  n_values = 1000
  type = Arrow::ListDataType.new(name: "values", type: :double)

  values = n_values.times.map do
    n_elements = Faker::Number.within(range: 1 ... 100)
    n_elements.times.map do
      Faker::Number.normal(mean: 0, standard_deviation: 1e+6)
    end
  end
  array = Arrow::ListArray.new(type, values)
benchmark:
  pure_ruby: |-
    array.collect.to_a
  values: |-
    array.values
