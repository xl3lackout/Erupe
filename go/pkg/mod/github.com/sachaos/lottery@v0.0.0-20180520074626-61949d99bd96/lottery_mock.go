// Code generated by MockGen. DO NOT EDIT.
// Source: lottery.go

// Package lottery is a generated GoMock package.
package lottery

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockWeighter is a mock of Weighter interface
type MockWeighter struct {
	ctrl     *gomock.Controller
	recorder *MockWeighterMockRecorder
}

// MockWeighterMockRecorder is the mock recorder for MockWeighter
type MockWeighterMockRecorder struct {
	mock *MockWeighter
}

// NewMockWeighter creates a new mock instance
func NewMockWeighter(ctrl *gomock.Controller) *MockWeighter {
	mock := &MockWeighter{ctrl: ctrl}
	mock.recorder = &MockWeighterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockWeighter) EXPECT() *MockWeighterMockRecorder {
	return m.recorder
}

// Weight mocks base method
func (m *MockWeighter) Weight() int {
	ret := m.ctrl.Call(m, "Weight")
	ret0, _ := ret[0].(int)
	return ret0
}

// Weight indicates an expected call of Weight
func (mr *MockWeighterMockRecorder) Weight() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Weight", reflect.TypeOf((*MockWeighter)(nil).Weight))
}

// MockLottery is a mock of Lottery interface
type MockLottery struct {
	ctrl     *gomock.Controller
	recorder *MockLotteryMockRecorder
}

// MockLotteryMockRecorder is the mock recorder for MockLottery
type MockLotteryMockRecorder struct {
	mock *MockLottery
}

// NewMockLottery creates a new mock instance
func NewMockLottery(ctrl *gomock.Controller) *MockLottery {
	mock := &MockLottery{ctrl: ctrl}
	mock.recorder = &MockLotteryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLottery) EXPECT() *MockLotteryMockRecorder {
	return m.recorder
}

// Draw mocks base method
func (m *MockLottery) Draw(arg0 []Weighter) int {
	ret := m.ctrl.Call(m, "Draw", arg0)
	ret0, _ := ret[0].(int)
	return ret0
}

// Draw indicates an expected call of Draw
func (mr *MockLotteryMockRecorder) Draw(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Draw", reflect.TypeOf((*MockLottery)(nil).Draw), arg0)
}
